#!/usr/bin/env python3
# coding: utf-8
# Author: Shuaib Oladigbolu
# Pseudonym: F007573P
# Twitter: @_sawzeeyy
# EasyJack v1.0

import os
import sys
import webbrowser

# OS Compatibility : Coloring
if sys.platform.startswith('win'):
    R, B, Y, C, W = '\033[1;31m', '\033[1;37m', '\033[93m', '\033[1;30m', '\033[0m'
    try:
        import win_unicode_console, colorama
        win_unicode_console.enable()
        colorama.init()
    except:
        print('[+] Error: Coloring libraries not installed')
        R, B, Y, C, W = '', '', '', '', ''
else:
    R, B, Y, C, W = '\033[1;31m', '\033[1;37m', '\033[93m', '\033[1;30m', '\033[0m'

def header():
    print('''%s
         /$$$$$$$$                              %s    /$$$$$                     /$$      %s
        | $$_____/                              %s   |__  $$                    | $$      %s
        | $$        /$$$$$$   /$$$$$$$ /$$   /$$%s      | $$  /$$$$$$   /$$$$$$$| $$   /$$%s
        | $$$$$    |____  $$ /$$_____/| $$  | $$%s      | $$ |____  $$ /$$_____/| $$  /$$/%s
        | $$__/     /$$$$$$$|  $$$$$$ | $$  | $$%s /$$  | $$  /$$$$$$$| $$      | $$$$$$/ %s
        | $$       /$$__  $$ \____  $$| $$  | $$%s| $$  | $$ /$$__  $$| $$      | $$_  $$ %s
        | $$$$$$$$|  $$$$$$$ /$$$$$$$/|  $$$$$$$%s|  $$$$$$/|  $$$$$$$|  $$$$$$$| $$ \  $$%s
        |________/ \_______/|_______/  \____  $$%s \______/  \_______/ \_______/|__/  \__/%s
                                       /$$  | $$                                        
                                      |  $$$$$$/   %sBy Shuaib Oladigbolu - @_sawzeeyy%s             
                                       \______/                                                                              
        %s'''%(R, B, R, B, R, B, R, B, R, B, R, B, R, B, R, B, R, C, R, C))

def generate_html_code(url):
    style = '''
    frame {
		opacity: 0.5;
		border: none;
		position: absolute;
		top: 0px;
		left: 0px;
		z-index: 1000;
	}
    '''
    code = """\
<html>
<head>
	<title>EasyJack - {}</title>
	<style>{}</style>
</head>
<body>
    <!-- PoC generated by EasyJack - https://github.com/sawzeeyy/EasyJack -->
	<p>Clickjacking PoC on <em>{}</em></p>
	<iframe id="frame" width="100%" height="90%" src="{}"></iframe>
</body>
</html>
    """.format(url, style, url, url)
    return code

def save_log(url):
    try:
        log = open('log.txt').readlines()
        log = [i.strip() for i in log]
    except: log = []
    if url in log: print('{}[+] Domain already logged'.format(Y, C))
    else:
        log.append(url)
        print('{}[+] Domain Added to log {}{}/log.txt{}'.format(Y, R, os.path.dirname(os.path.abspath(__file__)), C))
        write_log = open('log.txt', 'w')
        for domain in log: write_log.write(domain+'\n')
        write_log.close()

def save_html_file(code, filename):
    fh = open(os.path.dirname(os.path.abspath(__file__))+'/'+filename+'.html', 'w')
    for st in code: fh.write(st)
    fh.close()

def easyjack():
    header()
    dot_in_url = True
    while dot_in_url:
        url = input('{}[+] Enter URL : {}'.format(Y, B))
        if '.' in url: dot_in_url = False
        else:
            print('{}[+] URL Incomplete'.format(R, C))
    if 'http://' in url: pass
    elif 'https://' in url: pass
    else: url = 'https://' + url
    filename = input('{}[+] Output filename [Press ENTER to ignore] : {}'.format(Y, C))
    filename = 'poc_easyjack' if filename == '' else filename.split('.')[0] + '_easyjack'
    save_log(url)
    save_html_file(generate_html_code(url), filename)
    print('{}[+] PoC Successfully Generated{}'.format(Y, C))
    print('{}[+] File saved as {}{}/{}.html{}'.format(Y, R, os.path.dirname(os.path.abspath(__file__)), filename, C))
    print('{}[+] EasyJack Operation Completed!{}'.format(Y, W))
    try:
        webbrowser.open_new_tab('file:///' + os.path.dirname(os.path.abspath(__file__)) + '/' + filename + '.html')
    except:
        webbrowser.open_new_tab(filename + '.html')
if __name__ == '__main__': easyjack()